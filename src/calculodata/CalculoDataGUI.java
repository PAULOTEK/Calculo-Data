/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculodata;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author noemi.oliveira
 */
public class CalculoDataGUI extends javax.swing.JFrame {

    /**
     * Creates new form CalculoDataGUI
     */
    public CalculoDataGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtYear = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCalculate = new javax.swing.JButton();
        lblPascoa = new javax.swing.JLabel();
        lblCarnaval = new javax.swing.JLabel();
        lblCC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Digite o ano:");

        btnCalculate.setText("CALCULAR");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnCalculate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblCC)
                            .addComponent(lblPascoa)
                            .addComponent(lblCarnaval))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(38, 38, 38)
                .addComponent(btnCalculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(lblPascoa)
                .addGap(18, 18, 18)
                .addComponent(lblCarnaval)
                .addGap(21, 21, 21)
                .addComponent(lblCC)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
       
        if(!txtYear.getText().isEmpty()){
            int ano = Integer.parseInt(txtYear.getText());
            String[] dates = CalculateDate(ano);
            lblPascoa.setText("A páscoa de " + ano + " é em: " + dates[0]);
            lblCarnaval.setText("O carnaval de " + ano + " é em: " + dates[1]);
            lblCC.setText("O Corpus Christi de " + ano + " é em: " + dates[2]);
        }else{
            lblPascoa.setText("Digite o ano");
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculoDataGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculoDataGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculoDataGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculoDataGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculoDataGUI().setVisible(true);
                
                
                
            }
        });
    }
    
    public static String[] CalculateDate(int year) {
        int ano = year;
        
        //passo1: Seja Y o ano do qual se deseja a data da Páscoa. 
        int y = ano;
        
        // passo2: Seja G o resto da divisão inteira de Y por 19 acrescido de uma unidade. 
        int g = (y % 19) + 1;
        
        //pass3:  Seja C o quociente da divisão inteira de Y por 100 acrescido de 1
        int c = (y / 100) + 1;
        
        //passo4: Seja X o quociente da divisão de 3*C por 4, menos 12 
                 //e Z o quociente da divisão de 8*C+5 por 25, menos 5. 
        int x = ((3 * c) / 4) - 12;
        int z = ((8 * c + 5) / 25) - 5;
        
        //passo5: Seja E o resto da divisão inteira de (11*G+20+Z-X) por 30. 
        int e = (11 * g + 20 + z - x) % 30;
        
        //passo6: Se E=25 e G>11 ou se E=24 então some 1 a E
        if( (e==25 && g>11) || (e==24) ){
            e=e+1; //e+=1  ou  e++
        }
        
        //passo7: Seja N=44-E. Se N<21 então faça N receber N+30. 
        int n = 44-e;
        if(n < 21){
            n += 30; //n = n + 30
        }
        
        //passo8: Seja D o quociente da divisão inteira de 5 * Y por 4, menos (X + 10).
        //Faça N receber N + 7 menos o resto da divisão de (D + N) por 7. 
        int d = ((5 * y) / 4) - (x + 10);
        n = (n + 7) - ((d+n) % 7);
        
        //passo9: Se N>31 a Páscoa será no dia (N - 31) de abril, 
         //caso contrário será em N de março.
        
        int mes;
        int dia;
        if(n > 31){
            dia = n - 31;
            mes = 4;
        }else{
            dia = n;
            mes = 3;
        }

        System.out.println("Data da pascoa:" + dia+ "/" + mes + "/" + ano);        
        
        //Gregorian Calendar das datas
        GregorianCalendar dataPascoa = new GregorianCalendar(ano,mes-1, dia);
        
        GregorianCalendar dataCarnaval = new GregorianCalendar(ano,mes-1, dia);
        dataCarnaval.add(Calendar.DAY_OF_MONTH, -47);
        
        GregorianCalendar dataCC = new GregorianCalendar(ano,mes-1, dia);
        dataCC.add(Calendar.DAY_OF_MONTH, 60);
        
        //imprimir os objetos Gregorian Calendar
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println("Pascoa:" + df.format(dataPascoa.getTime()));
        System.out.println("Carnaval:" + df.format(dataCarnaval.getTime()));
        System.out.println("Corpus Cristi:" + df.format(dataCC.getTime()));
        
        String[] arrayDate = {df.format(dataPascoa.getTime()), df.format(dataCarnaval.getTime()), df.format(dataCC.getTime())};
        
        return arrayDate;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCC;
    private javax.swing.JLabel lblCarnaval;
    private javax.swing.JLabel lblPascoa;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
